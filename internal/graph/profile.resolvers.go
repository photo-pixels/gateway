package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/photo-pixels/gateway/internal/graph/model"
	api "github.com/photo-pixels/gateway/pkg/gen/user_account"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context) (*api.GetUserResponse, error) {
	session := r.AuthService.GetAccessSession(ctx)
	if session == nil {
		return nil, model.ErrorNoAuth
	}

	user, err := r.GetUserClient().GetUser(ctx, &api.GetUserRequest{
		UserId: session.UserID.String(),
	})
	if err != nil {
		return nil, fmt.Errorf("gr.GetUserClient().GetUser: %w", err)
	}
	return user, nil
}
